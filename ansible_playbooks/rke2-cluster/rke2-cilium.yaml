---
- name: Install/upgrade Cilium via Helm (local)
  hosts: localhost
  gather_facts: false
  become: false
  vars:
    kubeconfig_path: "~/.kube/config"
    cilium_chart_version: "1.18.1"
    cilium_host: "desktop-server.kubesoar.com"
    gateway_api_crds:
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/standard/gateway.networking.k8s.io_gatewayclasses.yaml
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/standard/gateway.networking.k8s.io_gateways.yaml
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/standard/gateway.networking.k8s.io_httproutes.yaml
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/standard/gateway.networking.k8s.io_referencegrants.yaml
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/standard/gateway.networking.k8s.io_grpcroutes.yaml
      - https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/v1.2.0/config/crd/experimental/gateway.networking.k8s.io_tlsroutes.yaml
    cilium_load_balancer_ip_pools:
      - 192.168.2.64/26
    cilium_load_balancer_ip: 192.168.2.100

  tasks:
    - name: Add Cilium chart repo
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io

    - name: Apply Gateway API CRDs
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        src: "{{ item }}"
      loop: "{{ gateway_api_crds }}"

    - name: Install/upgrade Cilium (strict kube-proxy replacement + L2 + Hubble + Gateway API)
      kubernetes.core.helm:
        name: cilium
        chart_ref: cilium/cilium
        chart_version: "{{ cilium_chart_version }}"
        release_namespace: kube-system
        create_namespace: true
        kubeconfig: "{{ kubeconfig_path }}"
        wait: false
        update_repo_cache: true
        values:
          kubeProxyReplacement: true
          k8sServiceHost: "{{ cilium_host }}"
          k8sServicePort: 6443
          l2announcements:
            enabled: true
          hubble:
            relay:
              enabled: true
            ui:
              enabled: true
          ingressController:
            enabled: true
            default: true
            loadBalancerMode: "shared"
            service:
              loadBalancerIP: "{{ cilium_load_balancer_ip }}"

          gatewayAPI:
            enabled: false
            hostNetwork:
              enabled: true
          envoy:
            enabled: false
            securityContext:
              capabilities:
                keepCapNetBindService: true
                envoy:
                  - NET_BIND_SERVICE

          operator:
            replicas: 1

    - name: Create CiliumLoadBalancerIPPool (default-pool)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: cilium.io/v2alpha1
          kind: CiliumLoadBalancerIPPool
          metadata:
            name: default-pool
          spec:
            blocks:
              - cidr: "{{ item }}"
      loop: "{{ cilium_load_balancer_ip_pools }}"


    - name: Restart cilium-operator deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        namespace: kube-system
        kind: Deployment
        name: cilium-operator
        state: restarted
      ignore_errors: true

    - name: Restart cilium DaemonSet
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        namespace: kube-system
        kind: DaemonSet
        name: cilium
        state: restarted
      ignore_errors: true

    - name: Create default Gateway
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: gateway.networking.k8s.io/v1
          kind: Gateway
          metadata:
            name: cilium-gateway
            namespace: kube-system
          spec:
            gatewayClassName: cilium
            listeners:
              - name: http
                port: 80
                protocol: HTTP
                allowedRoutes:
                  namespaces:
                    from: All
              - name: https
                port: 443
                protocol: HTTPS
                allowedRoutes:
                  namespaces:
                    from: All
