---

- name: Check if Cilium operator exists
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    kind: Deployment
    namespace: "{{ cilium_namespace }}"
    name: cilium-operator
  register: cilium_operator

- name: Check if Cilium Gateway exists
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    kind: Gateway
    namespace: "{{ cilium_namespace }}"
    name: cilium-gateway
  register: cilium_gateway

- name: Add Cilium Helm repo
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: "{{ cilium_chart_repo }}"
    force_update: true
  when: cilium_operator.resources | length == 0

- name: Create Cilium ns with privileged pod annotations
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ cilium_namespace }}"
        annotations:
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/warn: privileged
  when: cilium_operator.resources | length == 0


- name: Apply Gateway API CRDs (idempotent)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    src: "{{ item }}"
  loop: "{{ cilium_gateway_api_crds }}"
  when: cilium_operator.resources | length == 0

- name: Install/upgrade Cilium (strict kube-proxy replacement + L2 + Hubble)
  kubernetes.core.helm:
    name: cilium
    chart_ref: cilium/cilium
    chart_version: "{{ cilium_chart_version }}"
    release_namespace: "{{ cilium_namespace }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_path }}"
    wait: true
    update_repo_cache: true
    values: "{{ cilium_values }}"
    force: true
  register: cilium_helm

- name: Ensure CiliumLoadBalancerIPPool (default-pool) exists with all blocks
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition:
      apiVersion: cilium.io/v2alpha1
      kind: CiliumLoadBalancerIPPool
      metadata:
        name: default-pool
      spec:
        blocks: "{{ cilium_load_balancer_ip_pools | map('community.general.dict_kv', 'cidr') | list }}"
  register: cilium_ippool_result

- name: Restart cilium-operator deployment if Helm or IPPool changed
  # when: ((cilium_helm is changed) or (cilium_ippool_result is changed) ) and (cilium_operator.resources | length == 0)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    namespace: "{{ cilium_namespace }}"
    kind: Deployment
    name: cilium-operator
    state: present
  ignore_errors: true

- name: Restart cilium DaemonSet if Helm or IPPool changed
  # when: ((cilium_helm is changed) or (cilium_ippool_result is changed) ) and (cilium_operator.resources | length == 0)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    namespace: "{{ cilium_namespace }}"
    kind: DaemonSet
    name: cilium
    state: present
  ignore_errors: true

- name: Create default Gateway (idempotent)
  when: cilium_gateway.resources | length == 0
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: absent
    definition:
      apiVersion: gateway.networking.k8s.io/v1
      kind: Gateway
      metadata:
        name: cilium-gateway
        namespace: "{{ cilium_namespace }}"
      spec:
        gatewayClassName: cilium
        listeners:
          - name: http
            port: 80
            protocol: HTTP
            allowedRoutes:
              namespaces:
                from: All
          - name: https
            port: 443
            protocol: HTTPS
            allowedRoutes:
              namespaces:
                from: All


- name: Expose Hubble UI via Ingress with TLS (hubble.kubesoar.com)
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: hubble-ui
        namespace: kube-system
        annotations:
          kubernetes.io/ingress.class: cilium
          cert-manager.io/cluster-issuer: self-signed
          ingress.cilium.io/loadbalancer-mode: "shared"
          ingress.cilium.io/force-https: "disabled"
          ingress.cilium.io/loadbalancer-ip: "{{ cilium_load_balancer_ip }}"

      spec:
        ingressClassName: cilium
        rules:
          - host: hubble.kubesoar.com
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: hubble-ui
                      port:
                        number: 80
        tls:
          - hosts:
              - hubble.kubesoar.com
            secretName: hubble-ui-tls


- name: Dummy Ingress for Test App on shared LB
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    state: absent
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: dummy-app
        namespace: kube-system
        annotations:
          kubernetes.io/ingress.class: cilium
          cert-manager.io/cluster-issuer: letsencrypt-dev
          ingress.cilium.io/loadbalancer-mode: "shared"
          ingress.cilium.io/loadbalancer-ip: "{{ cilium_load_balancer_ip }}"
      spec:
        ingressClassName: cilium
        rules:
          - host: dummy.kubesoar.com
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: dummy-service
                      port:
                        number: 80
        tls:
          - hosts:
              - dummy.kubesoar.com
            secretName: dummy-tls
