version: '3'

tasks:

  default:
    desc: List all available tasks
    cmds:
      - task --list-all

  olm-install:
    desc: Install Operator Lifecycle Manager (OLM) v0.31.0
    cmds:
      - curl -sL https://github.com/operator-framework/operator-lifecycle-manager/releases/download/v0.31.0/install.sh | bash -s v0.31.0

  tekton-operator-install:
    desc: Install Tekton Operator from OperatorHub
    cmds:
      - kubectl create -f https://operatorhub.io/install/tektoncd-operator.yaml 

  tekton-operator-uninstall:
    desc: Uninstall Tekton Operator
    cmds:
      - kubectl delete -f https://operatorhub.io/install/tektoncd-operator.yaml

  shipwright-operator-install:
    desc: Install Shipwright Operator from OperatorHub
    cmds:
      - kubectl create -f https://operatorhub.io/install/shipwright-operator.yaml

  shipwright-operator-uninstall:
    desc: Uninstall Shipwright Operator
    cmds:
      - kubectl delete -f https://operatorhub.io/install/shipwright-operator.yaml

  keycloak-install:
    desc: Install Keycloak using custom script
    cmds:
      - bash ./keycloak.sh

  keycloak-uninstall:
    desc: Uninstall Keycloak Helm release
    cmds:
      - helm uninstall keycloak -n keycloak

  rabbitmq-cluster-install:
    desc: Install RabbitMQ Cluster Operator from official YAML
    cmds:
      - kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"

  rabbitmq-cluster-uninstall:
    desc: Uninstall RabbitMQ Cluster Operator
    cmds:
      - kubectl delete -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"

  rabbitmq-topology-install:
    desc: Install RabbitMQ Topology Operator from official YAML
    cmds:
      - kubectl apply -f https://github.com/rabbitmq/messaging-topology-operator/releases/latest/download/messaging-topology-operator-with-certmanager.yaml

  rabbitmq-topology-uninstall:
    desc: Uninstall RabbitMQ Topology Operator
    cmds:
      - kubectl delete -f https://github.com/rabbitmq/messaging-topology-operator/releases/latest/download/messaging-topology-operator-with-certmanager.yaml

  redis-helm-repo:
    desc: Add Redis Operator Helm repo
    cmds:
      - helm repo add ot-helm https://ot-container-kit.github.io/helm-charts/

  redis-install:
    desc: Install Redis Operator via Helm
    cmds:
      - helm upgrade redis-operator ot-helm/redis-operator --install --namespace ot-operators

  redis-uninstall:
    desc: Uninstall Redis Operator and remove namespace
    cmds:
      - helm uninstall redis-operator -n ot-operators
      - kubectl delete ns ot-operators

  awx-helm-repo:
    desc: Add AWX Operator Helm repo
    cmds:
      - helm repo add awx-operator https://ansible-community.github.io/awx-operator-helm/
      - helm repo update

  awx-install:
    desc: Install AWX Operator using Helm
    cmds:
      - helm upgrade --install awx-operator awx-operator/awx-operator -n awx --create-namespace

  awx-uninstall:
    desc: Uninstall AWX Operator and clean up namespace
    cmds:
      - helm uninstall awx-operator -n awx
      - kubectl delete ns awx

  postgres-crunchy-install:
    desc: Install CrunchyData Postgres Operator using remote Kustomize
    cmds:
      - kubectl apply -k "https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/install/namespace"
      - kubectl apply --server-side -k "https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/install/default"

  postgres-crunchy-uninstall:
    desc: Uninstall CrunchyData Postgres Operator and delete namespace
    cmds:
      - kubectl delete --ignore-not-found -k "https://raw.githubusercontent.com/CrunchyData/postgres-operator-examples/main/kustomize/install/default"
      - kubectl delete namespace postgres-operator

  kyverno-install:
    desc: Install Kyverno admission controller
    cmds:
      - |
        if ! kubectl get ns kyverno >/dev/null 2>&1; then
          kubectl create -f https://github.com/kyverno/kyverno/releases/download/v1.13.0/install.yaml
        else
          echo "Kyverno is already installed."
        fi

  kyverno-uninstall:
    desc: Uninstall Kyverno
    cmds:
      - kubectl delete -f https://github.com/kyverno/kyverno/releases/download/v1.13.0/install.yaml

  longhorn-install:
    desc: Install Longhorn storage platform
    cmds:
      - kubectl apply -f https://raw.githubusercontent.com/longhorn/longhorn/v1.8.1/deploy/longhorn.yaml

  longhorn-uninstall:
    desc: Uninstall Longhorn storage platform
    cmds:
      - kubectl delete -f https://raw.githubusercontent.com/longhorn/longhorn/v1.8.1/deploy/longhorn.yaml

  kyverno-policy-ui-helm-repo:
    desc: Add Policy Reporter Helm repo
    cmds:
      - helm repo add policy-reporter https://policy-reporter.github.io/helm-charts || true
      - helm repo update

  kyverno-policy-ui-install:
    desc: Install Policy Reporter UI for Kyverno with NGINX ingress
    cmds:
      - |
         helm upgrade --install policy-reporter policy-reporter/policy-reporter \
          --create-namespace -n policy-reporter \
          --values - <<EOF
          ui:
            enabled: true
            ingress:
              enabled: true
              className: nginx
              annotations:
                nginx.ingress.kubernetes.io/rewrite-target: /
                cert-manager.io/cluster-issuer: self-signed-issuer
              hosts:
                - host: policy-reporter.kubesoar.test
                  paths:
                  - path: /
                    pathType: Prefix
              tls:
                - secretName: policy-reporter-tls
                  hosts:
                    - policy-reporter.kubesoar.test
          plugin:
            kyverno:
              enabled: true
          
         EOF

  kyverno-policy-ui-uninstall:
    desc: Uninstall Policy Reporter UI and clean up namespace
    cmds:
      - helm uninstall policy-reporter -n policy-reporter
      - kubectl delete namespace policy-reporter

  istio-install:
    desc: Install Istio with default profile using istioctl
    cmds:
      - istioctl install {{.CLI_ARGS | default "--set profile=default -y" }}

  istio-uninstall:
    desc: Uninstall Istio and purge istioctl configuration
    cmds:
      - istioctl uninstall -y --purge
      - kubectl delete namespace istio-system

  gateway-crds-install:
    desc: Install Gateway API CRDs from Project Contour
    cmds:
      - kubectl apply -f https://raw.githubusercontent.com/projectcontour/contour/release-1.30/examples/gateway/00-crds.yaml

  gateway-crds-uninstall:
    desc: Uninstall Gateway API CRDs
    cmds:
      - kubectl delete -f https://raw.githubusercontent.com/projectcontour/contour/release-1.30/examples/gateway/00-crds.yaml

  linkerd-install:
    desc: Install Linkerd CRDs and control plane
    cmds:
      - linkerd install --crds | kubectl apply -f -
      - linkerd install | kubectl apply -f -

  linkerd-uninstall:
    desc: Uninstall Linkerd and remove CRDs
    cmds:
      - linkerd uninstall | kubectl delete -f -
      - kubectl delete -f https://raw.githubusercontent.com/linkerd/linkerd2/stable/install/namespace.yaml --ignore-not-found

  vault-operator-install:
    desc: Install Vault Operator
    cmds:
      - kubectl config set-context --current --namespace=default
      - helm upgrade --install --wait vault-operator oci://ghcr.io/bank-vaults/helm-charts/vault-operator --namespace default --create-namespace

  vault-operator-uninstall:
    desc: Uninstall Vault Operator
    cmds:
      - kubectl kustomize https://github.com/bank-vaults/vault-operator/deploy/rbac | kubectl delete -f -
      - helm uninstall vault-operator -n default

  vault-instance-install:
    desc: Install Vault instance
    cmds:
      - kubectl kustomize https://github.com/bank-vaults/vault-operator/deploy/rbac | kubectl apply -n default -f -
      - kubectl apply -f https://raw.githubusercontent.com/bank-vaults/vault-operator/v1.21.0/deploy/examples/cr-raft.yaml -n default
      - |
        kubectl patch ingress vault \
          -n default \
          --type=merge \
          -p '
        metadata:
          annotations:
            cert-manager.io/cluster-issuer: self-signed-issuer
            kubernetes.io/ingress.class: nginx
        spec:
          rules:
            - host: vault.kubesoar.test
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: vault
                        port:
                          number: 8200
          tls:
            - hosts:
                - vault.kubesoar.test
              secretName: vault-tls
        '


  vault-instance-uninstall:
    desc: Uninstall Vault instance
    cmds:
      - kubectl delete -f https://raw.githubusercontent.com/bank-vaults/vault-operator/v1.21.0/deploy/examples/cr-raft.yaml
      - kubectl kustomize https://github.com/bank-vaults/vault-operator/deploy/rbac | kubectl delete -f -


  keda-helm-repo:
    desc: Add KEDA Helm repo
    cmds:
      - helm repo add kedacore https://kedacore.github.io/charts || true 
      - helm repo update
  
  keda-install:
    desc: Install KEDA using Helm
    cmds:
      - helm upgrade --install keda kedacore/keda --namespace keda --create-namespace

  
  keda-uninstall:
    desc: Uninstall KEDA and remove namespace
    cmds:
      - kubectl delete $(kubectl get scaledobjects.keda.sh,scaledjobs.keda.sh -A \
        -o jsonpath='{"-n "}{.items[*].metadata.namespace}{" "}{.items[*].kind}{"/"}{.items[*].metadata.name}{"\n"}')

      - helm uninstall keda -n keda
      - kubectl delete ns keda

  eso-helm-repo:
    cmds:
    - helm repo add external-secrets https://charts.external-secrets.io || true
    - helm repo update

  eso-install:
    cmds:
    - helm install external-secrets \
       external-secrets/external-secrets \
        -n external-secrets \
        --create-namespace \

  eso-uninstall:
    cmds:
    - helm uninstall external-secrets -n external-secrets
    - kubectl delete ns external-secrets
  argocd-helm-repo:
    desc: Add ArgoCD Helm repo
    cmds:
      - helm repo add argo https://argoproj.github.io/argo-helm || true
      - helm repo update

  argocd-install:
    desc: Install ArgoCD via Helm
    cmds:
      - |
         helm upgrade --install argocd argo/argo-cd \
          --create-namespace -n argocd \
          --version 7.8.2 \
          --values - <<EOF
          configs:
            params:
              server.insecure: true
          global:
            domain: argocd.kubesoar.test
          server:
            ingress:
              enabled: true
              ingressClassName: nginx
              hostname: argocd.kubesoar.test
              tls: false
          params:
            server.insecure: true
         EOF

  argocd-uninstall:
    desc: Uninstall ArgoCD
    cmds:
      - helm uninstall argocd -n argocd
      - kubectl delete ns argocd


  cert-manager-helm-repo:
    desc: Add Cert-Manager Helm repo
    cmds:
      - helm repo add jetstack https://charts.jetstack.io || true
      - helm repo update

  cert-manager-install:
    desc: Install Cert-Manager via Helm
    cmds:
      - |
         helm upgrade --install cert-manager jetstack/cert-manager \
          --create-namespace -n cert-manager \
          --values - <<EOF
          crds:
            enabled: true
         EOF

  cert-manager-uninstall:
    desc: Uninstall Cert-Manager
    cmds:
      - helm uninstall cert-manager -n cert-manager
      - kubectl delete ns cert-manager

  metallb-helm-repo:
    desc: Add MetalLB Helm repo
    cmds:
      - helm repo add metallb https://metallb.github.io/metallb || true
      - helm repo update

  metallb-install:
    desc: Install MetalLB via Helm
    cmds:
      - |
         helm upgrade --install metallb metallb/metallb \
          --create-namespace -n metallb-system

  metallb-uninstall:
    desc: Uninstall MetalLB
    cmds:
      - helm uninstall metallb -n metallb-system
      - kubectl delete ns metallb-system


  monitoring-helm-repo:
    desc: Add Prometheus Community Helm repo
    cmds:
      - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
      - helm repo update

  monitoring-install:
    desc: Install kube-prometheus-stack via Helm
    cmds:
      - |
         helm upgrade --install kube-prometheus-stack prometheus-community/kube-prometheus-stack \
          --create-namespace -n monitoring \
          --version 70.2.1

  monitoring-uninstall:
    desc: Uninstall kube-prometheus-stack
    cmds:
      - helm uninstall kube-prometheus-stack -n monitoring
      - kubectl delete ns monitoring


  nginx-gateway-helm-repo:
    desc: Add NGINX Gateway Fabric OCI repo
    cmds:
      - helm repo add nginx-gateway oci://ghcr.io/nginx/charts || true
      - helm repo update

  nginx-gateway-install:
    desc: Install NGINX Gateway Fabric via Helm
    cmds:
      - |
         helm upgrade --install nginx-gateway-fabric nginx-gateway/nginx-gateway-fabric \
          --create-namespace -n nginx-gateway \
          --version 1.6.2 \
          --values - <<EOF
          service:
            loadBalancerIP: 192.168.2.101
         EOF

  nginx-gateway-uninstall:
    desc: Uninstall NGINX Gateway Fabric
    cmds:
      - helm uninstall nginx-gateway-fabric -n nginx-gateway
      - kubectl delete ns nginx-gateway

  nginx-ingress-helm-repo:
    desc: Add Ingress-NGINX Helm repo
    cmds:
      - helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx || true
      - helm repo update

  nginx-ingress-install:
    desc: Install NGINX Ingress Controller via Helm
    cmds:
      - |
         helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          --create-namespace -n ingress-nginx \
          --values - <<EOF
          controller:
            ingressClassResource:
              default: true
            service:
              type: LoadBalancer
              loadBalancerIP: 192.168.2.100
         EOF

  nginx-ingress-uninstall:
    desc: Uninstall NGINX Ingress Controller
    cmds:
      - helm uninstall ingress-nginx -n ingress-nginx
      - kubectl delete ns ingress-nginx
